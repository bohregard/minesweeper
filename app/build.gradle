apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

def propsFile = rootProject.file('key.properties')
def props = new Properties()
props.load(new FileInputStream(propsFile))

android {
    signingConfigs {
        config {
            storeFile file(props['STORE_FILE'])
            storePassword props['STORE_PASSWORD']
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
        }
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    def versionPropsFile = file('version.properties')
    def versionBuild


    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }


    def versionMajor = 0
    def versionMinor = 1
    def versionPatch = 0

    defaultConfig {
        applicationId "com.bohregard.minesweeper"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch} v${versionBuild}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug) || taskGraph.hasTask(assembleRelease)) {
            autoIncrementBuildNumber()
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:gridlayout-v7:25.3.1'

    compile 'com.google.firebase:firebase-ads:10.2.4'
    compile 'com.google.android.gms:play-services-games:10.2.4'
    testCompile 'junit:junit:4.12'
}
